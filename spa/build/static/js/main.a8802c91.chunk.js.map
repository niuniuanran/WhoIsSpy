{"version":3,"sources":["Components/Shared/OptionButtonBig.tsx","Contexts/LanguageContext.tsx","Components/Shared/ContentContainer.tsx","Components/EnterGame/ChooseLanguage.tsx","Components/EnterGame/NumSettingSliders.tsx","Components/EnterGame/RoomInfoEnter.tsx","Components/EnterGame/NewRoom.tsx","stub/StubCreateRoomApi.ts","Components/EnterGame/JoinRoom.tsx","Components/Contribute/Contribute.tsx","Components/EnterGame/EnterGameOptions.tsx","Contexts/PlayerContext.tsx","Components/Shared/PlayerAvatar.tsx","Components/Room/NameUserForRoom.tsx","Components/Room/Room.tsx","Components/GameRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","option","height","width","fontSize","iconSpan","paddingRight","OptionButtonBig","text","path","icon","classes","history","useHistory","Grid","item","xs","Button","variant","size","color","className","onClick","push","LanguageContext","React","createContext","undefined","LanguageProvider","language","children","textDisplay","newRoom","en","cn","joinRoom","addWords","randomBlank","eighteenPlus","back","spyPlural","spySingular","total","roomCode","enRoom","cnRoom","enterRoom","roomFull","createRoom","ok","youNickname","Provider","value","getText","key","getCurrentLanguage","root","flexGrow","textAlign","margin","padding","boxSizing","palette","secondary","backgroundColor","content","spacing","position","top","left","msTransform","transform","ContentContainer","allowBack","languageContext","useContext","container","md","aria-label","style","fontWeight","goBack","ChooseLanguage","PlayerNumSlider","withStyles","track","thumb","border","rail","opacity","bottom","valueLabel","marginTop","marginLeft","Slider","SpyNumSlider","mark","NumSettingSliders","defaultValue","getAriaValueText","v","aria-labelledby","step","min","max","marks","valueLabelDisplay","valueLabelFormat","codeDisplay","breakpoints","up","skeleton","RoomInfoEnter","loading","code","capacity","currentPlayerNum","roomLanguage","marginBottom","Typography","align","paragraph","display","Array","map","Skeleton","animation","split","c","i","disabled","formGroup","submitButton","NewRoom","useState","numPlayer","numSpy","roomSettings","setRoomSettings","createdRoomInfo","setCreatedRoomInfo","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","e","target","name","label","setTimeout","stubCreateRoomApi","JoinRoom","Contribute","EnterGameOptions","match","useRouteMatch","PlayerContext","PlayerProvider","id","setId","nickname","setNickname","createStyles","flexDirection","justifyContent","alignItems","xlarge","large","small","xsmall","avatar","PlayerAvatar","setLoading","useEffect","Avatar","alt","src","onLoad","NameUserForRoom","tryNickname","setTryNickname","TextField","autoFocus","onInput","targetInput","Room","useParams","Paper","GameRoute","App","createMuiTheme","type","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8802c91.chunk.js","sourcesContent":["import { Grid, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    option: {\n        height: '5rem',\n        width: '15rem',\n        fontSize: '1.5rem'\n    },\n    iconSpan: {\n        fontSize: '2rem',\n        paddingRight: '1rem'\n    }\n  }));\n\ninterface OptionProps {\n    text: string,\n    path: string,\n    icon?: JSX.Element\n}\n\nexport default function OptionButtonBig({text, path, icon}:OptionProps){\n    const classes = useStyles()\n    const history = useHistory()\n\n    return <Grid item xs={12}>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.option} onClick={()=>{history.push(path)}}>\n                    <span className={classes.iconSpan}>\n                        {icon}\n                    </span>\n                    <span> \n                        {text}\n                    </span>\n                </Button>\n            </Grid>\n}","import React from \"react\";\n\ninterface LanguageContextProp {\n    language:string,\n    children:JSX.Element\n}\nconst LanguageContext = React.createContext<any>(undefined)\nexport type LanguageContextType = {\n    language: string,\n    getText: (arg:string) => string,\n    getCurrentLanguage: () => string\n}\n\nfunction LanguageProvider({language, children}:LanguageContextProp){\n    \n    const textDisplay:{ [name: string]: {[language:string]:string}}={\n        newRoom: {\n            en: \"New room\",\n            cn: \"新建房间\",\n        },\n        joinRoom:{\n            en: \"Join room\",\n            cn: \"加入房间\"\n        },\n        addWords:{\n            en: \"Contribute\",\n            cn: \"贡献词条\"\n        },\n        randomBlank: {\n            en: \"Spy can be blank\",\n            cn: \"卧底可以是白板\"\n        },\n        eighteenPlus: {\n            en: \"Allow 18+ words\",\n            cn: \"允许成人词汇\"\n        },\n        back: {\n            en: \"Back\",\n            cn: \"返回\"\n        },\n        spyPlural: {\n            en: \"spies\",\n            cn: \"个卧底\"\n        },\n        spySingular: {\n            en: \"spy\",\n            cn: \"个卧底\"\n        },\n        total: {\n            en: \"total\",\n            cn: \"个玩家\"\n        },\n        roomCode: {\n            en: \"Room code\",\n            cn: \"房间号\"\n        },\n        enRoom: {\n            en: \"Room in English\",\n            cn: \"英文房间\"\n        },\n        cnRoom: {\n            en: \"Room in Chinese\",\n            cn: \"中文房间\"\n        },\n        enterRoom: {\n            en: \"Enter room\",\n            cn: \"进入房间\"\n        },\n        roomFull: {\n            en: \"Room is full\",\n            cn: \"房间已满\"\n        },\n        createRoom: {\n            en: \"Create room\",\n            cn: \"创建房间\"\n        },\n        ok: {\n            en: \"OK\",\n            cn: \"确认\"\n        },\n        youNickname: {\n            en: \"Your nickname\",\n            cn: \"你的昵称\"\n        }\n    }\n\n    const getText = (key:string) => textDisplay[key][language]\n    const getCurrentLanguage = () => language\n\n    return <LanguageContext.Provider value={\n        {\n            language,\n            getText,\n            getCurrentLanguage\n        }\n    }>\n        {children}\n    </LanguageContext.Provider>\n}\n\nexport {LanguageProvider, LanguageContext}\n","import {Button, Grid} from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from 'react'\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      textAlign: 'center',\n      margin: 0,\n      padding: '2rem',\n      width: '100vw',\n      height: '100vh',\n      boxSizing: 'border-box',\n      color: theme.palette.text.secondary,\n      backgroundColor: '#121212',\n    },\n    content: {\n        height: '60%',\n        width: '100%',\n        margin: theme.spacing(0, 'auto'),\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        msTransform: 'translateY(-50%) translateX(-50%)',\n        transform: 'translateY(-50%) translateX(-50%)',\n    },\n    back: {\n        position: 'absolute',\n        left: '-2rem',\n        top: '-6rem'\n    }\n  }));\n\ninterface MainLayoutProp {\n    allowBack?: boolean\n    children:JSX.Element\n}\n\nexport default function ContentContainer({children, allowBack}:MainLayoutProp){\n    const history = useHistory();\n    const classes = useStyles();\n    const languageContext = useContext(LanguageContext) as LanguageContextType\n\n    return <div className={classes.root}>\n        {\n            allowBack?(  <Grid container >\n                    <Grid item xs={9} md={4} className={classes.content}> \n                        <div className={classes.back}>\n                            <Button size=\"large\" aria-label=\"back\" color=\"primary\" variant=\"text\" style={{fontWeight: \"bolder\"}} onClick={() => history.goBack()}>\n                                <ArrowBackIosIcon /> {languageContext && languageContext.getText(\"back\")}\n                            </Button>\n                        </div>\n                        {children}\n                    </Grid>\n                </Grid>\n                ):( <Grid container>\n                    <Grid item xs={9} md={6} className={classes.content}> \n                        {children}\n                    </Grid>\n                </Grid>\n            )\n        }\n        </div>\n}","import OptionButtonBig from '../Shared/OptionButtonBig';\nimport {Grid} from '@material-ui/core'\nimport ContentContainer from '../Shared/ContentContainer';\n\nexport default function ChooseLanguage(){\n    return <ContentContainer>\n                <Grid container spacing={5}>\n                    <OptionButtonBig path=\"/en\" text=\"English\"/>\n                    <OptionButtonBig path=\"/cn\" text=\"中文\"/>\n            </Grid>\n        </ContentContainer>\n}","import { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Slider } from \"@material-ui/core\";\nimport { useContext } from 'react'\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\n\nconst PlayerNumSlider = withStyles({\n    root: {\n        position: 'absolute',\n        width: \"50%\",\n        left: '50%',\n        top: '1rem',\n      },\n    track: {\n        height: 6,\n      },\n    thumb: {\n        height: '1rem',\n        width: '1rem',\n        border: '1px solid currentColor',\n      },\n    rail: {\n        height: 6,\n        opacity: 1,\n        backgroundColor: 'rgba(63, 81, 181, 0.38)',\n        '&::after': {\n            content: '\"\"',\n            height: '6px',\n            width: '100%',\n            position: 'absolute',\n            bottom: '0px',\n            top: '0px',\n            left: '-100%',\n            backgroundColor: 'currentColor',\n            }\n    },\n    valueLabel: {\n        top: -46,\n        left: 'calc(-50% - 8px)',\n        '& *': {\n            width: '2.8rem',\n            height: '2.8rem',\n          },\n        '& span span': {\n            width: '1.7rem',\n            fontSize: '0.8rem',\n            marginTop: '0.6rem',\n            marginLeft: '-0.6rem'\n        }\n    }\n})(Slider)\n\nconst SpyNumSlider = withStyles({\n    root: {\n        position: 'absolute',\n        width: \"30%\",\n        left: '10%',\n        top: '1rem'\n      },\n    track: {\n        height: 6,\n    },\n    rail: {\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        opacity: 1,\n        height: 0,\n        '&::after': {\n            content: '\"\"',\n            height: '6px',\n            width: '33.33%',\n            position: 'absolute',\n            bottom: '0px',\n            top: '0px',\n            left: '-33.33%',\n            backgroundColor: 'currentColor',\n          }\n      },\n      thumb: {\n        height: '1rem',\n        width: '1rem',\n        border: '1px solid currentColor',\n      },\n      mark: {\n          color: '#424242',\n          opacity: 0.8\n      },\n      valueLabel: {\n        top: -46,\n        left: 'calc(-50% - 8px)',\n        '& *': {\n            width: '2.8rem',\n            height: '2.8rem',\n          },\n        '& span span': {\n            width: '1.7rem',\n            fontSize: '0.8rem',\n            marginTop: '0.5rem',\n            marginLeft: '-0.6rem'\n        }\n    }\n})(Slider)\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      position: 'relative',\n      width: '100%',\n      height: '5rem',\n      marginTop: '1rem',\n    },\n  }));\n\nexport default function NumSettingSliders(){\n    const {getText} = useContext(LanguageContext) as LanguageContextType\n    const classes = useStyles()\n    return <div className={classes.root}>\n            <PlayerNumSlider\n                defaultValue={6}\n                getAriaValueText={v => `${v} players`}\n                aria-labelledby=\"number-of-players\"\n                step={1}\n                min={5}\n                max={10}\n                marks\n                valueLabelDisplay=\"on\"   \n                valueLabelFormat={v => `${v} ${getText(\"total\")}`}                 \n            />    \n            <SpyNumSlider\n                defaultValue={2}\n                getAriaValueText={v => `${v} ${getText(\"spyPlural\")}`}\n                aria-labelledby=\"number-of-spys\"\n                step={1}\n                min={1}\n                max={4}\n                valueLabelDisplay=\"on\"   \n                color=\"secondary\"\n                marks\n                valueLabelFormat={v => `${v} ${v > 1 ? getText(\"spyPlural\") : getText(\"spySingular\")}`}\n            />  \n        </div>\n}","import { Grid } from \"@material-ui/core\";\nimport { Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Skeleton } from '@material-ui/lab';\nimport ContentContainer from '../Shared/ContentContainer'\nimport PersonIcon from '@material-ui/icons/Person';\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\nimport { useContext } from \"react\";\nimport RoomEnterInfo from \"../../Interfaces/RoomEnterInfo\"\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    codeDisplay: {\n        [theme.breakpoints.up('md')]: {\n            width: \"80%\",\n            margin: '0 auto'\n        }\n    },\n    skeleton: {\n        margin: '0 auto'\n    }\n  }));\n\nexport default function RoomInfoEnter({loading, code, capacity, currentPlayerNum, language: roomLanguage}: RoomEnterInfo){\n        const { getText } = useContext(LanguageContext) as LanguageContextType\n        const classes = useStyles()\n        const history = useHistory()\n\n        return <ContentContainer allowBack>\n            <div>\n                <Grid container style={{marginBottom: '3rem'}} className={classes.codeDisplay}>\n                    <Grid item xs={11}>\n                        <Typography align=\"left\" paragraph variant=\"h6\" display=\"block\" style={{margin: \"1rem 0 1rem 1rem\"}}>\n                            {getText(\"roomCode\")}: \n                        </Typography>\n                    </Grid>\n                    {\n                        (loading || !code)? [...Array(4)].map(() => (\n                            <Grid item xs={3}>\n                                <Skeleton className={classes.skeleton} animation=\"wave\">\n                                    <Typography variant=\"h2\">1</Typography>\n                                </Skeleton>\n                            </Grid>)) : (\n                            code.split(\"\").map((c, i) => (\n                                <Grid item xs={3}>\n                                    <Typography variant=\"h2\">{c}</Typography>\n                                </Grid>)\n                        ))\n                    }\n                </Grid>\n\n                {\n                    (currentPlayerNum !== undefined && capacity !== undefined) ? (\n                        <div>\n                        {\n                            [...Array(currentPlayerNum)].map(() => <PersonIcon color=\"primary\"/>)\n                        }\n                        {\n                            [...Array(capacity - currentPlayerNum)].map(() => <PersonIcon color=\"disabled\"/>)\n                        }\n                        </div>\n                    ) : (\n                        <Skeleton className={classes.skeleton}>\n                            {[...Array(7)].map(() => <PersonIcon color=\"primary\"/>)}\n                        </Skeleton>\n                    )\n                }\n\n                {\n                    (roomLanguage !== undefined ) ? (\n                        <Typography display=\"block\" variant=\"caption\">\n                            {getText(`${roomLanguage}Room`)}\n                        </Typography>\n                    ) : (\n                        <Skeleton className={classes.skeleton}>\n                            <Typography>Room in English</Typography>\n                        </Skeleton>\n                    )\n                }\n                \n                {(loading || !code)? (<Skeleton className={classes.skeleton} animation=\"wave\">\n                    {\n                        (currentPlayerNum < capacity) ? (<Button size=\"large\" variant=\"contained\" color=\"primary\" style={{marginTop: \"2rem\"}}>\n                            {getText(\"enterRoom\")}\n                        </Button>) : (\n                        <Button disabled size=\"large\" variant=\"contained\" color=\"primary\" style={{marginTop: \"2rem\"}}>\n                            {getText(\"roomFull\")}\n                        </Button>\n                        )\n                    }\n                    </Skeleton>):(\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" style={{marginTop: \"2rem\"}} onClick={() => {history.push(`/${roomLanguage}/room/${code}`)}}>\n                    {getText(\"enterRoom\")}\n                </Button>)} \n            </div>\n        </ContentContainer>\n}","import {useState, useContext} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContentContainer from \"../Shared/ContentContainer\";\nimport { FormGroup, FormControlLabel, Checkbox, Button } from \"@material-ui/core\";\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\nimport NumSettingSliders from \"./NumSettingSliders\";\nimport RoomInfoEnter from \"./RoomInfoEnter\";\nimport stubCreateRoomApi from \"../../stub/StubCreateRoomApi\"\nimport RoomEnterInfo from \"../../Interfaces/RoomEnterInfo\";\n\nexport interface RoomSettings {\n    numPlayer: number,\n    numSpy: number,\n    randomBlank: boolean,\n    eighteenPlus: boolean,\n    language: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        width: 'fit-content',\n        margin: '1rem auto'\n    },\n    submitButton: {\n        margin: '2rem 1rem 1rem 0'\n    }\n  }));\n\nexport default function NewRoom(){\n    const classes = useStyles();\n    const {getText, getCurrentLanguage} = useContext(LanguageContext) as LanguageContextType\n    const [roomSettings, setRoomSettings] = useState<RoomSettings>({\n        numPlayer: 6,\n        numSpy: 1,\n        randomBlank: true,\n        eighteenPlus: false,\n        language: getCurrentLanguage()\n    })\n    const [createdRoomInfo, setCreatedRoomInfo] = useState<RoomEnterInfo>({\n        loading: false,\n        code: undefined,\n        capacity: 5,\n        currentPlayerNum: 0,\n        language: getCurrentLanguage()\n    })\n    const onClickCreate = () => {\n        setCreatedRoomInfo((createdRoomInfo) => ({...createdRoomInfo, loading: true}))\n        setTimeout(()=> {\n            setCreatedRoomInfo(() => stubCreateRoomApi(roomSettings))\n        }, 2000)\n    }\n\n    if (createdRoomInfo.loading || createdRoomInfo.code !== undefined) {\n        return <RoomInfoEnter {...createdRoomInfo}/>\n    }\n\n    return <ContentContainer allowBack>\n            <form>\n                <NumSettingSliders/>    \n                <FormGroup className={classes.formGroup}>\n                    <FormControlLabel\n                        control={<Checkbox checked={roomSettings.randomBlank} \n                                        onChange={ e => setRoomSettings(roomSettings => ({...roomSettings, randomBlank: e.target.checked}))} \n                                        name=\"random-blank\"\n                                        color=\"primary\" />}\n                        label={getText(\"randomBlank\")}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={roomSettings.eighteenPlus} \n                                        onChange={ e => setRoomSettings(roomSettings => ({...roomSettings, eighteenPlus: e.target.checked}))} \n                                        name=\"eighteen-plus\"\n                                        color=\"secondary\" />}\n                        label={getText(\"eighteenPlus\")}\n                    />\n                </FormGroup>\n                <Button className={classes.submitButton} onClick={onClickCreate}\n                        size=\"large\" variant=\"contained\" color=\"primary\">\n                    { getText(\"createRoom\") }\n                </Button>\n            </form>\n        </ContentContainer>\n}","import { RoomSettings } from \"../Components/EnterGame/NewRoom\";\n\nexport default function stubCreateRoomApi(roomSettings: RoomSettings){\n    return {\n        loading: false,\n        code: \"2333\",\n        capacity: roomSettings.numPlayer,\n        currentPlayerNum: 0,\n        language: roomSettings.language\n    }\n}","import ContentContainer from \"../Shared/ContentContainer\"\n\nexport default function JoinRoom(){\n    return <ContentContainer allowBack>\n       <div>join room</div>\n    </ContentContainer>\n}","import ContentContainer from \"../Shared/ContentContainer\"\n\nexport default function Contribute(){\n    return <ContentContainer allowBack>\n       <div>contribute</div>\n    </ContentContainer>\n}","import {Grid} from \"@material-ui/core\"\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\nimport { useContext } from \"react\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport OptionButtonBig from \"../Shared/OptionButtonBig\";\nimport ContentContainer from \"../Shared/ContentContainer\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nexport default function EnterGameOptions(){\n    const {getText} = useContext(LanguageContext) as LanguageContextType\n    const match = useRouteMatch();\n\n    return <ContentContainer allowBack>\n                <Grid container spacing={5}>\n                    <OptionButtonBig text={getText(\"newRoom\")} icon={<GroupAddIcon/>} path={`${match.path}/new-room`}/>\n                    <OptionButtonBig text={getText(\"joinRoom\")} icon={<PersonAddIcon/>} path={`${match.path}/join-room`}/>\n                    <OptionButtonBig text={getText(\"addWords\")} icon={<PostAddIcon/>} path={`${match.path}/contribute`}/>\n                </Grid>\n            </ContentContainer>\n}","import React, {useState} from \"react\";\n\nconst PlayerContext = React.createContext<any>(undefined)\n\ninterface PlayerContextProp {\n    children:JSX.Element\n}\n\nexport type PlayerContextType = {\n    id?: number,\n    nickname?: string,\n    setId: (id: number) => void\n    setNickname: (name: string) => void\n    getAvatarPath: () => string\n}\n\nfunction PlayerProvider({ children }: PlayerContextProp){\n    const [id, setId] = useState(undefined)\n    const [nickname, setNickname] = useState(undefined)\n\n    return <PlayerContext.Provider value={\n        {\n            id,\n            setId,\n            nickname,\n            setNickname,\n        }\n    }>\n        {children}\n    </PlayerContext.Provider>\n}\n\nexport {PlayerProvider, PlayerContext}\n","import { Avatar } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { useState } from \"react\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { useEffect } from \"react\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    xlarge:{\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        padding: theme.spacing(1)\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    small: {\n        width: theme.spacing(5),\n        height: theme.spacing(5),\n    },\n    xsmall: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    avatar: {\n        backgroundColor: '#343434',\n    },\n  }),\n);\n\ninterface PlayerAvatarProps {\n    size:\"xlarge\"|\"large\"|\"small\"|\"xsmall\"\n    nickname?:string,\n}\n\nexport default function PlayerAvatar({nickname, size}: PlayerAvatarProps){\n    const classes = useStyles()\n    const [loading, setLoading] = useState(true)\n    useEffect(()=>setLoading(true),[nickname])\n\n    return <div className={classes.root}>\n            <Avatar alt={nickname} src={`https://avatars.dicebear.com/api/bottts/${nickname}.svg`} \n                    className={`${classes.avatar} ${classes[size]}`} onLoad={()=>setLoading(false)} style={loading? {display: 'none'}: {display: 'block'}}/>\n            <Skeleton variant=\"circle\" animation=\"wave\" className={`${classes[size]}`} \n                    style={loading? {display: 'block'}: {display: 'none'}}/>\n        </div>\n}","import {useState, useContext} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormGroup, TextField, Button, } from \"@material-ui/core\";\nimport { LanguageContext, LanguageContextType } from \"../../Contexts/LanguageContext\";\nimport { PlayerContext, PlayerContextType } from \"../../Contexts/PlayerContext\";\nimport PlayerAvatar from \"../Shared/PlayerAvatar\";\nimport ContentContainer from \"../Shared/ContentContainer\"\n\nconst useStyles = makeStyles((theme) => ({\n    formGroup: {\n        width: 'fit-content',\n        margin: '1rem auto'\n    },\n    submitButton: {\n        margin: '1rem auto'\n    }\n  }));\n\nexport default function NameUserForRoom() {\n    const classes = useStyles()\n    const { getText } = useContext(LanguageContext) as LanguageContextType\n    const { setNickname } = useContext(PlayerContext) as PlayerContextType\n    const [ tryNickname, setTryNickname ] = useState(\"\")\n\n    return <ContentContainer> \n        <form>\n            <PlayerAvatar nickname={tryNickname} size=\"xlarge\"/>\n            <FormGroup className={classes.formGroup}>\n                <TextField\n                    id=\"nickname\"\n                    label={getText(\"youNickname\")}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    value={tryNickname}\n                    autoFocus\n                    onInput={(e) => {\n                        const targetInput = e.target as HTMLInputElement\n                        setTryNickname(targetInput.value)\n                    }}\n                />\n            </FormGroup>\n            <Button className={classes.submitButton} onClick={() => setNickname(tryNickname)}\n                    size=\"large\" variant=\"contained\" color=\"primary\">\n                { getText(\"ok\") }\n        </Button>      \n        </form>\n    </ContentContainer>\n}","import { useParams } from \"react-router-dom\";\nimport { useContext } from \"react\"\nimport { Paper } from \"@material-ui/core\"\nimport { PlayerContext, PlayerContextType } from \"../../Contexts/PlayerContext\";\nimport NameUserForRoom from \"./NameUserForRoom\";\nimport ContentContainer from \"../Shared/ContentContainer\"\n\nexport default function Room(){\n    const { nickname } = useContext(PlayerContext) as PlayerContextType\n    const { code } = useParams<{code?: string}>()\n\n    if (!nickname) {\n        return <NameUserForRoom />\n    }\n    return <ContentContainer> \n        <Paper>Code: {code}</Paper>\n    </ContentContainer>\n}","import NewRoom from './EnterGame/NewRoom';\nimport JoinRoom from './EnterGame/JoinRoom';\nimport Contribute from './Contribute/Contribute';\nimport EnterGameOptions from './EnterGame/EnterGameOptions';\nimport { PlayerProvider } from \"../Contexts/PlayerContext\";\nimport Room from './Room/Room';\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n  } from \"react-router-dom\";\n\nexport default function GameRoute(){\n    const match = useRouteMatch();\n\n   return  <Switch>\n                <Route path={`${match.path}/new-room`}>\n                    <NewRoom/>\n                </Route>\n                <Route path={`${match.path}/join-room`}>\n                    <JoinRoom/>\n                </Route>\n                <Route path={`${match.path}/contribute`}>\n                    <Contribute/>\n                </Route>\n                <Route path={`${match.path}/room/:code`}>\n                    <PlayerProvider>\n                        <Room/>\n                    </PlayerProvider>\n                </Route>\n                <Route path={match.path}>\n                    <EnterGameOptions/>\n                </Route>\n            </Switch>\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ChooseLanguage from \"./Components/EnterGame/ChooseLanguage\";\nimport {LanguageProvider} from \"./Contexts/LanguageContext\";\nimport GameRoute from \"./Components/GameRoute\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    }\n  })\n  return (\n    <ThemeProvider theme={theme}>\n        <Router>\n            <Switch>\n              <Route path=\"/en\">\n                <LanguageProvider language={\"en\"}>\n                  <GameRoute/>\n                </LanguageProvider>\n              </Route>\n              <Route path=\"/cn\">\n                <LanguageProvider language={\"cn\"}>\n                  <GameRoute/>\n                </LanguageProvider>\n              </Route>\n              <Route path=\"/\">\n                <ChooseLanguage />\n              </Route>\n            </Switch>\n        </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}